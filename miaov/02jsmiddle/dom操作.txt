Dom ：Document Object Model (文档对象模型)
文档：HTML页面
文档对象：页面中的元素
文档对象模型：为了让对象（js）能够操作页面中的元素

DOM把文档看做是一棵树，同时定义了很多方法来操作这棵树里的每一个元素（节点）DOM节点

方法：
	一、获取子元素
		obj.childNodes
		obj.children
		
		obj.firstElementChild || obj.firstChild
		obj.lastElementChild || obj.lastChild
		
		obj.nextElementSibling || obj.nextSibling
		obj.previousElementSibling || obj.previousSibling

	二、获取父元素
		obj.parentNode
		obj.offsetParent
		
	三、各种位置宽高
		obj.offsetTop/obj.offsetLeft
		obj.clientWidth
		obj.offsetWodth
	
	一、获取子节点：
		1、元素.childNodes()   只读属性  获取子元素列表集合
			标准浏览器：包含文本节点，元素节点
			ie7/8：只包含元素节点
			
			类型有12种
				1、元素节点==1
				2、属性节点==2
				3、文本节点==3
				
			判断类型：元素.nodeType
			
			元素.attributes()  只读属性  获取元素属性列表集合（数组）
				/*
					eg: 
						<ul id='oUl' class='aa'></ul>
							oUl.attributes.length  //2
							oUl.attributes[0].nodeType  //2 属性节点  
							oUl.attributes[0].name  //id  
							oUl.attributes[1].name  //aa  
				*/
				
		2、元素.children()	只读属性  获取子元素列表集合	推荐使用	
			标准浏览器：只包含元素节点
			ie7/8：只包含元素节点
			
		3、获取第一个子节点：
			元素.firstChild	  只读属性
				标准下包含文本节点，元素节点
				ie7/8：只包含元素节点
			元素.firstElementFirst
				标准下只包含元素节点
				ie7/8无这一属性
				
		4、获取最后一个子节点	只读属性
			元素.lastChild;	
				标准下包含文本节点，元素节点
				ie7/8：只包含元素节点
			元素.lastElementChild;
				标准下只包含元素节点
				ie7/8无这一属性
	
	二、获取兄弟节点
		1、获取下一个兄弟节点
			元素.nextSibling;	只读属性
				标准下包含文本节点，元素节点
				ie7/8只包含元素节点
			元素.nextElementSibling
				标准下只包含元素节点
				ie7/8无这一属性
				
		2、获取上一个兄弟节点	只读属性
			元素.previousSibling
				标准浏览器包含文本节点，元素节点
				ie7/8只包含元素节点
			元素.previousElementSibling
				标准下只包含元素节点
				ie7/8无这一属性
			
				
	三、获取当前元素父级节点
		1、元素.parentNode	只读属性
			标准和ie7/8无差别，没有兼容性问题
			
		2、元素.offsetParent  只读属性 获取离当前元素最近的有定位的父级元素
			如果没有定位，默认是body 
			ie7如果当前元素没有定位，默认是body 。如果当前元素有定位，默认是HTML
			
			元素.offsetLeft 元素.offsetTop   当前元素到定位父级偏移的位置（offsetParent）
	
	四、获取元素的各种尺寸宽高
		1、元素.offsetTop / 元素.offsetLeft  获取元素到定位父级的距离（上边距，左边距）
			如果当前元素没有定位
				offsetLeft/offsetTop  ---> html
				offsetParent ---> body
		2、元素.clientWidth：width+padding（可视区域的宽，如果内容过多，自身有滚动条或者overflow：hide都不算在内）
		   元素.offsetWidth ：width+padding+border（可视区域的宽+border）
		


